services:
  app:
    build: .
    image: my-app-image
    container_name: my-app-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:latest
    container_name: my-postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}       # New database name (from .env)
      POSTGRES_USER: ${DB_USER}     # User for the database
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: my-redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"

  celery_worker:
    image: my-app-image  # Use the same app image for Celery
    container_name: my-celery-worker-container
    command: celery -A quikread worker --loglevel=info  # Command to start Celery worker
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - app
      - postgres
      - redis

  celery_beat:
    image: my-app-image  # Use the same app image for Celery Beat
    container_name: my-celery-beat-container
    command: celery -A quikread beat --loglevel=info  # Command to start Celery Beat
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - app
      - postgres
      - redis

volumes:
  postgres_data:
